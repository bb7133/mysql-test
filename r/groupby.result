SET @SAVE_sql_mode = @@sql_mode ;
SET @@sql_mode = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' ;
set @@tidb_hashagg_partial_concurrency=1;
set @@tidb_hashagg_final_concurrency=1;
drop table if exists t;
create table t (c1 int, c2 int);
select count(*) from t;
count(*)
0
insert into t values (1, 1), (2, 2), (1, 3), (2, 1);
select count(*) from t order by c1;
count(*)
4
select c1, c2, max(c1), min(c2), count(c1), count(c2) from t order by c1;
c1	c2	max(c1)	min(c2)	count(c1)	count(c2)
1	1	2	1	4	4
select c1, c2, count(*) cnt from t group by c1 order by c1, c2, cnt;
c1	c2	cnt
1	1	2
2	2	2
select c1, c2, count(*) cnt  from t group by c2 order by c1, c2, cnt;
c1	c2	cnt
1	1	2
1	3	1
2	2	1
select c1, c2, count(*) cnt from t group by c1, c2 order by c1, c2, cnt;
c1	c2	cnt
1	1	1
1	3	1
2	1	1
2	2	1
select s+10 as col from (select sum(c1) as s from t where c1 < 2) as a order by col;
col
12
select * from (select count(c1) as c1, c2 from t group by c2 order by t.c1, c2) as a order by a.c1, a.c2;
c1	c2
1	2
1	3
2	1
select distinct(c2) as col from (select count(c1) as c, c2 from t group by c2 order by c, c2) as a order by col;
col
1
2
3
select distinct(c) from (select count(c1) as c, c2 from t group by c2 order by c, c2) as a order by c;
c
1
2
insert into t values (),(),();
insert into t values (1,null);
select * from t;
c1	c2
1	1
2	2
1	3
2	1
NULL	NULL
NULL	NULL
NULL	NULL
1	NULL
select count(c2) as col, c1 from t group by c1 order by col, c1;
col	c1
0	NULL
2	1
2	2
select count(*) as col, c1 from t group by c1 order by col, c1;
col	c1
2	2
3	NULL
3	1
select group_concat(c2) as col from t group by c1 order by col;
col
NULL
1,3
2,1
select group_concat(c1) as col from t group by c2 order by col;
col
1
1
1,2
2
select group_concat(c2,c1) as col from t group by c1 order by col;
col
NULL
11,31
22,12
delete from t;
insert into t values (1,1), (2,2), (1,2), (1,3);
select c1, group_concat(c2) from t group by t.c1 order by c1;
c1	group_concat(c2)
1	1,2,3
2	2
select c1, group_concat(c2) from t group by 1 order by c1;
c1	group_concat(c2)
1	1,2,3
2	2
select * from t group by 3 order by c1;
Error 1105: Unknown column '3' in 'group statement'
select * from t group by count(c1) order by c1;
Error 1111: Invalid use of group function
select count(c1) from t group by 1 order by c1;
Error 1056: Can't group on 'count(c1)'
select c1, group_concat(c2) from t group by "abc" order by c1;
c1	group_concat(c2)
1	1,2,2,3
select c1, group_concat(c2) from t group by 3.14 order by c1;
c1	group_concat(c2)
1	1,2,2,3
select c1, group_concat(c2) from t group by 3 * 10 order by c1;
c1	group_concat(c2)
1	1,2,2,3
select c1, group_concat(c2) from t group by "abc", c1 order by c1;
c1	group_concat(c2)
1	1,2,3
2	2
select c1 as a, group_concat(c2) from t group by a order by c1;
a	group_concat(c2)
1	1,2,3
2	2
select c1 as a, group_concat(c2) from t group by a * 0 order by c1;
a	group_concat(c2)
1	1,2,2,3
select c1 as a, group_concat(c2) from t group by c1 * 0 order by c1;
a	group_concat(c2)
1	1,2,2,3
select c1 as a, group_concat(c2) as b from t group by b + 1 order by a;
Error 1247: Reference 'b' not supported (reference to group function)
select c1 as a, c2 as a from t group by a order by a;
Error 1052: Column 'a' in group statement is ambiguous
select c1 as c2, c2 from t group by c1 order by c1;
c2	c2
1	1
2	2
select c1 as c2, c2 from t group by c2 order by c1;
Error 1052: Column 'c2' in group statement is ambiguous
select c1 as c2, c2 from t group by c2 + 1 order by c1;
c2	c2
1	1
1	3
2	2
select c1 as c2, c1 as c2 from t group by c2 order by c1;
c2	c2
1	1
1	1
2	2
select c1 as c2, c1 as c2 from t group by c1 order by c1;
c2	c2
1	1
2	2
delete from t;
insert into t values (1,1), (2, 1), (1, 1), (4, 1);
select sum(all c1) as col from t order by col;
col
8
select sum(distinct all c1) col from t order by col;
col
7
select avg(all c1) col from t order by col;
col
2.0000
select avg(distinct all c1) col from t order by col;
col
2.3333
select count(c1) col from t order by col;
col
4
select count(distinct c1) col from t order by col;
col
3
select group_concat(c1) col from t group by c2 order by col;
col
1,2,1,4
select group_concat(distinct c1) col from t group by c2 order by col;
col
1,2,4
select group_concat(c1, c2) col from t group by c2 order by col;
col
11,21,11,41
select group_concat(distinct c1, c2) col from t group by c2 order by col;
col
11,21,41
select sum(distinct c1) + count(*) col from t group by c2 order by col;
col
11
drop table t;
create table t(c1 int);
insert t values(null), (null);
select sum(c1) as col from t order by col;
col
NULL
select avg(c1) as col from t order by col;
col
NULL
select count(c1) as col from t order by col;
col
0
select count(*) as col from t order by col;
col
2
delete from t;
insert into t values (1), (2), (3);
must output empty
select * from t where c1 = null group by c1 order by c1;
c1
select * from t where c1 = null group by c1 order by max(c1);
c1
select * from t group by c1 having not null is null order by c1;
c1
select count(*) col from t where c1 = null group by c1 order by col;
col
select count(*) col from t where c1 = null having not null is null order by col;
col
must output an extra row
select * from t where c1 = null order by max(c1);
c1
NULL
select count(*) as col from t where c1 = null order by col;
col
0
select count(c1) as col from t where c1 = null order by col;
col
0
select avg(c1) as col from t where c1 = null order by col;
col
NULL
select sum(c1) as col from t where c1 = null order by col;
col
NULL
select group_concat(c1) as col from t where c1 = null order by col;
col
NULL
select * from t where c1 = null having count(c1) = 0;
c1
NULL
select c1, max(c1), 123 from t where c1 = null order by c1;
c1	max(c1)	123
NULL	NULL	123
sqllogic/test/random/groupby test
drop table if exists tab0;
CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER);
insert tab0 values(1,2,3),(2,3,3),(3,1,2),(4,4,1),(6,3,1);
select * from tab0;
col0	col1	col2
1	2	3
2	3	3
3	1	2
4	4	1
6	3	1
SELECT col0 AS col0, col0 AS col0 FROM tab0 GROUP BY col0 order by col0;
col0	col0
1	1
2	2
3	3
4	4
6	6
SELECT col0 + col1 AS col0, col0 AS col0 FROM tab0 GROUP BY col0 order by col0;
col0	col0
3	1
4	3
5	2
8	4
9	6
SELECT all + col0 AS col0, col0 AS col0 FROM tab0 GROUP BY col0 order by col0;
col0	col0
1	1
2	2
3	3
4	4
6	6
SELECT DISTINCT + - col0 AS col0, col1 * - col1 col0 FROM tab0 GROUP BY col1 order by col0;
col0	col0
-4	-16
-3	-1
-2	-9
-1	-4
SELECT DISTINCT + - col0 AS col0, col1 * - col1 col0 FROM tab0 GROUP BY col1, col0 order by col0;
col0	col0
-6	-9
-4	-16
-3	-1
-2	-9
-1	-4
SELECT DISTINCT + - col0 AS col0, col1 * - col1 col0 FROM tab0 AS cor0 GROUP BY col1, col0 order by col0;
col0	col0
-6	-9
-4	-16
-3	-1
-2	-9
-1	-4
SELECT ALL - col0 col1, col0 AS col1 FROM tab0 cor0 GROUP BY col1, col0 order by col0;
col1	col1
-1	1
-2	2
-3	3
-4	4
-6	6
SELECT col2 col1, col1 FROM tab0 AS cor0 GROUP BY cor0.col2, cor0.col1 order by cor0.col1, cor0.col2;
col1	col1
2	1
3	2
1	3
3	3
1	4
SELECT cor0.col2 col1, cor0.col1 FROM tab0 AS cor0 GROUP BY cor0.col2, cor0.col1 order by cor0.col1, cor0.col2;
col1	col1
2	1
3	2
1	3
3	3
1	4
SELECT DISTINCT cor0.col2 col1, cor0.col1 FROM tab0 AS cor0 GROUP BY cor0.col2, cor0.col1 order by cor0.col1, cor0.col2;
col1	col1
2	1
3	2
1	3
3	3
1	4
set @@tidb_hashagg_partial_concurrency=1;
set @@tidb_hashagg_final_concurrency=1;
SET @@sql_mode = @SAVE_sql_mode ;
