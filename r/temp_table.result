drop table if exists t1,t2;
drop view if exists v1;
CREATE TABLE t1 (c int not null, d char (10) not null);
insert into t1 values(1,""),(2,"a"),(3,"b");
CREATE TEMPORARY TABLE t1 (a int not null, b char (10) not null);
insert into t1 values(4,"e"),(5,"f"),(6,"g");
CREATE TABLE t2 (x int not null, y int not null);
select * from t1;
a	b
4	e
5	f
6	g
create TEMPORARY TABLE t2 (c int not null, d char (10) not null);
insert into t2 select * from t1;
create TEMPORARY TABLE IF NOT EXISTS t2 (a int);
select * from t2;
c	d
4	e
5	f
6	g
CREATE TEMPORARY TABLE t1 (a int not null, b char (10) not null);
Error 1050: Table 'temp_table.t1' already exists
ALTER TABLE t1 RENAME t2;
Error 8200: TiDB doesn't support ALTER TABLE for local temporary table
drop table t1,t2;
drop table t1,t2;
CREATE TEMPORARY TABLE t1 (pkCrash INTEGER PRIMARY KEY,strCrash VARCHAR(255));
INSERT INTO t1 ( pkCrash, strCrash ) VALUES ( 1, '1');
SELECT CONCAT_WS(pkCrash, strCrash) FROM t1;
CONCAT_WS(pkCrash, strCrash)
1
drop table t1;
create temporary table t1 (id int(10) not null unique);
create temporary table t2 (id int(10) not null primary key,
val int(10) not null);
insert into t1 values (1),(2),(4);
insert into t2 values (1,1),(2,1),(3,1),(4,2);
select one.id, two.val, elt(two.val,'one','two') from t1 one, t2 two where two.id=one.id order by one.id;
id	val	elt(two.val,'one','two')
1	1	one
2	1	one
4	2	two
drop table t1,t2;
create temporary table v1 (A varchar(64));
insert into v1 values('This is temp. table');
create view v1 as select 'This is view' A;
select * from v1;
A
This is temp. table
show create table v1;
Table	Create Table
v1	CREATE TEMPORARY TABLE `v1` (
  `A` varchar(64) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
show create view v1;
View	Create View	character_set_client	collation_connection
v1	CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `v1` (`A`) AS SELECT _UTF8MB4'This is view' AS `A`	utf8mb4	utf8mb4_general_ci
drop view v1;
select * from v1;
A
This is temp. table
create view v1 as select 'This is view again' A;
select * from v1;
A
This is temp. table
drop table v1;
select * from v1;
A
This is view again
drop view v1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (i INT);
LOCK TABLE t1 WRITE;
CREATE TEMPORARY TABLE t1 (i INT);
The following command should not block
DROP TEMPORARY TABLE t1;
DROP TABLE t1;
CREATE TABLE t1 (i INT);
CREATE TEMPORARY TABLE t2 (i INT);
DROP TEMPORARY TABLE t2, t1;
Error 1051: Unknown table 'temp_table.t1'
SELECT * FROM t2;
i
SELECT * FROM t1;
i
DROP TABLE t1;
create temporary table t1 (a int);
insert into t1 values (4711);
select * from t1;
a
4711
truncate t1;
insert into t1 values (42);
select * from t1;
a
42
drop table t1;
CREATE TEMPORARY TABLE t1(a INT, b VARCHAR(20));
INSERT INTO t1 VALUES(1, 'val1'), (2, 'val2'), (3, 'val3');
DELETE FROM t1 WHERE a=1;
SELECT count(*) FROM t1;
count(*)
2
DELETE FROM t1;
SELECT * FROM t1;
a	b
DROP TABLE t1;
#
# Bug #48067: A temp table with the same name as an existing table,
#             makes drop database fail.
#
DROP TEMPORARY TABLE IF EXISTS bug48067.t1;
DROP DATABASE IF EXISTS bug48067;
CREATE DATABASE bug48067;
CREATE TABLE bug48067.t1 (c1 int);
INSERT INTO bug48067.t1 values (1);
CREATE TEMPORARY TABLE bug48067.t1 (c1 int);
DROP DATABASE bug48067;
DROP TEMPORARY table bug48067.t1;
End of 5.1 tests
#
# Test that admin statements work for temporary tables.
#
DROP TABLE IF EXISTS t1,t2;
CREATE TEMPORARY TABLE t1(a INT);
CREATE TEMPORARY TABLE t2(b INT);
CREATE TEMPORARY TABLE t3(c INT);
INSERT INTO t1 VALUES (1), (2), (3);
INSERT INTO t2 VALUES (11), (12), (13);
INSERT INTO t3 VALUES (101), (102), (103);
ANALYZE TABLE t1, t2, t3;
DROP TABLES t1, t2, t3;
#
# OPERATING A TEMPORARY TABLE IN A NON-EXISTENT SCHEMA
#
#
# Creating a temporary table in a non-existent schema is now disallowed
CREATE TEMPORARY TABLE bogus.t1(a INT);
Error 1049: Unknown database 'bogus'
CREATE SCHEMA bogus;
CREATE TEMPORARY TABLE bogus.t1(a INT);
CREATE TEMPORARY TABLE bogus.t2(a INT);
DROP SCHEMA bogus;
# Dropping a schema does not delete temporary tables, so they can
# still be selected from.
SELECT * FROM bogus.t1;
a
# ... but they can dropped using DROP TEMPORARY TABLE.
DROP TEMPORARY TABLE bogus.t1;
# ... or ordinary DROP TABLE.
DROP TABLE bogus.t2;
SELECT * FROM bogus.t1;
Error 1146: Table 'bogus.t1' doesn't exist
SELECT * FROM bogus.t2;
Error 1146: Table 'bogus.t2' doesn't exist
#
# Bug#25951134: MEMORY LEAK OF INTERNAL TEMPORARY TABLES
#
CREATE TABLE t1(a LONGTEXT);
SELECT (EXISTS (SELECT 1 FROM t1
GROUP BY (NOT EXISTS (SELECT 1 FROM (SELECT 1 FROM t1 GROUP BY a)r))))
FROM t1;
(EXISTS (SELECT 1 FROM t1
GROUP BY (NOT EXISTS (SELECT 1 FROM (SELECT 1 FROM t1 GROUP BY a)r))))
DROP TABLE t1;
#
# Bug #30716037 MEMORY CORRUPTION BUG IN MYSQLD
#
CREATE TEMPORARY TABLE v0 ( v1 INT UNIQUE ) ;
WITH RECURSIVE v0 ( v1 ) AS ( SELECT -128 UNION SELECT v1 + 33 FROM v0 )
SELECT 'x' , -1 , 54703121.000000 FROM v0 AS v3 , v0 AS v2 , v0 NATURAL JOIN
v0 AS v5 NATURAL JOIN v0 AS v4 ;
Error 3636: Recursive query aborted after 1001 iterations. Try increasing @@cte_max_recursion_depth to a larger value
DROP TABLE v0;
WITH RECURSIVE v0 ( c1 ) AS (
SELECT 0
UNION
SELECT c1 + 1 FROM v0
)
SELECT *
FROM
v0,
v0 AS v1
NATURAL JOIN v0 AS v2;
Error 3636: Recursive query aborted after 1001 iterations. Try increasing @@cte_max_recursion_depth to a larger value
WITH RECURSIVE v0 ( c1 ) AS (
SELECT 0
UNION
SELECT 1 FROM v0
)
SELECT *
FROM
v0,
v0 AS v1
NATURAL JOIN v0 AS v2;
c1	c1
0	0
0	1
1	0
1	1
