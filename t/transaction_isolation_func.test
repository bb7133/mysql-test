--echo #
--echo # WL#9636: Rename tx_{isolation,isolation} variables to transaction_*
--echo #

--echo # Creating connections

--enable_connect_log
connect (con0,localhost,root,,transaction_isolation_func);
connection con0;

SET SESSION AUTOCOMMIT = OFF;
SET SESSION TIDB_TXN_MODE = 'PESSIMISTIC'; 
SET SESSION INNODB_LOCK_WAIT_TIMEOUT = 3; 

connect (con1, localhost, root,,transaction_isolation_func);
connection con1;

SET SESSION AUTOCOMMIT = OFF;
SET SESSION TIDB_TXN_MODE = 'PESSIMISTIC'; 
SET SESSION INNODB_LOCK_WAIT_TIMEOUT = 3; 

connection default;

--echo # Creating tables

CREATE TABLE t1 (a int PRIMARY KEY, b int) ENGINE=INNODB;

INSERT INTO t1 VALUES(2, 2);
INSERT INTO t1 VALUES(4, 4);
INSERT INTO t1 VALUES(6, 6);
INSERT INTO t1 VALUES(8, 8);
INSERT INTO t1 VALUES(16, 16);
INSERT INTO t1 VALUES(18, 18);
INSERT INTO t1 VALUES(20, 20);
INSERT INTO t1 VALUES(22, 22);
INSERT INTO t1 VALUES(24, 24);

--echo # Testing for value READ-COMMITTED
connection con0;
SET SESSION transaction_isolation = 'READ-COMMITTED';

connection con1;
SET SESSION transaction_isolation = 'READ-COMMITTED';

--echo # Testing WHERE on keys using % on even rows
connection con0;

START TRANSACTION;

SELECT * FROM t1 WHERE a % 2 = 0 FOR UPDATE;
UPDATE t1 SET b = 11 WHERE a % 2 = 0;

connection con1;

START TRANSACTION;

SELECT * FROM t1;

INSERT INTO t1 VALUES(5, 5);
INSERT INTO t1 VALUES(7, 7);

SELECT * FROM t1;

COMMIT;

connection con0;

COMMIT;

--echo # Testing for value REPEATABLE-READ
connection con0;
SET SESSION transaction_isolation = 'REPEATABLE-READ';

connection con1;
SET SESSION transaction_isolation = 'REPEATABLE-READ';

--echo # Testing WHERE on keys using % on even rows
connection con0;

START TRANSACTION;

SELECT * FROM t1 WHERE a % 2 = 0 FOR UPDATE;
UPDATE t1 SET b = 12 WHERE a % 2 = 0;

connection con1;

START TRANSACTION;

SELECT * FROM t1;

INSERT INTO t1 VALUES(9, 9);
INSERT INTO t1 VALUES(13, 13);

SELECT * FROM t1;

COMMIT;

--echo ** Connection con0 **
connection con0;

COMMIT;

--echo # Testing WHERE on keys using IN clause
connection con0;

START TRANSACTION;

SELECT * FROM t1 WHERE a IN (2,4,6,8,10,12,14,16,18,20,22,24,26) = 0 FOR UPDATE;
UPDATE t1 SET b = 13 WHERE a IN (2,4,6,8,10,12,14,16,18,20,22,24,26) = 0;

connection con1;

START TRANSACTION;

SELECT * FROM t1;

--error ER_LOCK_WAIT_TIMEOUT
INSERT INTO t1 VALUES(9, 9);
--error ER_LOCK_WAIT_TIMEOUT
INSERT INTO t1 VALUES(13, 13);

SELECT * FROM t1;

COMMIT;

connection con0;

COMMIT;

--echo # Testing WHERE on keys using IN clause
connection con0;

START TRANSACTION;

SELECT * FROM t1 WHERE a IN (2,4,6,8) = 0 FOR UPDATE;
UPDATE t1 SET b = 14 WHERE a IN (2,4,6,8) = 0;

connection con1;

START TRANSACTION;

SELECT * FROM t1;

--error ER_LOCK_WAIT_TIMEOUT
INSERT INTO t1 VALUES(9, 9);
--error ER_LOCK_WAIT_TIMEOUT
INSERT INTO t1 VALUES(13, 13);

SELECT * FROM t1;

COMMIT;

connection con0;

COMMIT;

connection default;
--echo Disconnecting Connections con0, con1
disconnect con0;
disconnect con1;
--disable_connect_log

DROP TABLE t1;
