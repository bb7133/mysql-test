drop table if exists t1,t2,t3,t11,t12;
DROP DATABASE IF EXISTS delete_db1;
DROP DATABASE IF EXISTS delete_db2;
DROP DATABASE IF EXISTS delete_db3;
CREATE TABLE t1 (a tinyint(3), b tinyint(5));
INSERT INTO t1 VALUES (1,1);
INSERT LOW_PRIORITY INTO t1 VALUES (1,2);
INSERT INTO t1 VALUES (1,3);
DELETE from t1 where a=1 limit 1;
DELETE LOW_PRIORITY from t1 where a=1;
INSERT INTO t1 VALUES (1,1);
DELETE from t1;
INSERT INTO t1 VALUES (1,2);
DELETE from t1;
INSERT INTO t1 VALUES (1,2);
SET AUTOCOMMIT=0;
DELETE from t1;
SET AUTOCOMMIT=1;
drop table t1;
create table t1 (
a bigint not null,
b bigint not null default 0,
c bigint not null default 0,
d bigint not null default 0,
e bigint not null default 0,
f bigint not null default 0,
g bigint not null default 0,
h bigint not null default 0,
i bigint not null default 0,
j bigint not null default 0,
primary key (a,b,c,d,e,f,g,h,i,j));
insert into t1 (a) values (2),(4),(6),(8),(10),(12),(14),(16),(18),(20),(22),(24),(26),(23);
delete from t1 where a=26;
drop table t1;
create table t1 (
a bigint not null,
b bigint not null default 0,
c bigint not null default 0,
d bigint not null default 0,
e bigint not null default 0,
f bigint not null default 0,
g bigint not null default 0,
h bigint not null default 0,
i bigint not null default 0,
j bigint not null default 0,
primary key (a,b,c,d,e,f,g,h,i,j));
insert into t1 (a) values (2),(4),(6),(8),(10),(12),(14),(16),(18),(20),(22),(24),(26),(23),(27);
delete from t1 where a=27;
drop table t1;
CREATE TABLE `t1` (
`i` int(10) NOT NULL default '0',
`i2` int(10) NOT NULL default '0',
PRIMARY KEY  (`i`)
);
DELETE FROM t1 USING t1 WHERE post='1';
Error 1054: Unknown column 'post' in 'where clause'
drop table t1;
CREATE TABLE t1 (
bool     char(0) default NULL,
not_null varchar(20) binary NOT NULL default '',
misc     integer not null,
PRIMARY KEY  (not_null)
) ;
INSERT INTO t1 VALUES (NULL,'a',4), (NULL,'b',5), (NULL,'c',6), (NULL,'d',7);
select * from t1 where misc > 5 and bool is null;
bool	not_null	misc
NULL	c	6
NULL	d	7
delete   from t1 where misc > 5 and bool is null;
select * from t1 where misc > 5 and bool is null;
bool	not_null	misc
select count(*) from t1;
count(*)
2
delete from t1 where 1 > 2;
select count(*) from t1;
count(*)
2
delete from t1 where 3 > 2;
select count(*) from t1;
count(*)
0
drop table t1;
create table t1 (a int not null auto_increment primary key, b char(32));
insert into t1 (b) values ('apple'), ('apple');
select * from t1;
a	b
1	apple
2	apple
delete t1 from t1, t1 as t2 where t1.b = t2.b and t1.a > t2.a;
select * from t1;
a	b
1	apple
drop table t1;
# sql_safe_updates mode with multi-table DELETE
CREATE TABLE t1(a INTEGER PRIMARY KEY);
INSERT INTO t1 VALUES(10),(20);
CREATE TABLE t2(b INTEGER);
INSERT INTO t2 VALUES(10),(20);
SET SESSION sql_safe_updates=1;
ANALYZE TABLE t2;
EXPLAIN DELETE t2 FROM t1 JOIN t2 WHERE t1.a = 10;
id	estRows	task	access object	operator info
Delete_6	N/A	root		N/A
└─HashJoin_10	2.00	root		CARTESIAN inner join
  ├─Point_Get_11(Build)	1.00	root	table:t1	handle:10
  └─TableReader_13(Probe)	2.00	root		data:TableFullScan_12
    └─TableFullScan_12	2.00	cop[tikv]	table:t2	keep order:false
DELETE t2 FROM t1 JOIN t2 WHERE t1.a = 10;
SET SESSION sql_safe_updates=default;
DROP TABLE t1, t2;
create table t1 (a int, b int, unique key (a), key (b));
insert into t1 values (3, 3), (7, 7);
delete t1 from t1 where a = 3;
select * from t1;
a	b
7	7
drop table t1;
CREATE TABLE t1 ( a int PRIMARY KEY );
DELETE FROM t1 WHERE t1.a > 0 ORDER BY t1.a;
INSERT INTO t1 VALUES (0),(1),(2);
DELETE FROM t1 WHERE t1.a > 0 ORDER BY t1.a LIMIT 1;
SELECT * FROM t1;
a
0
2
DROP TABLE t1;
create table t1 (a int);
delete `4.t1` from t1 as `4.t1` where `4.t1`.a = 5;
delete FROM `4.t1` USING t1 as `4.t1` where `4.t1`.a = 5;
drop table t1;
create table t1(f1 int primary key);
insert into t1 values (4),(3),(1),(2);
delete from t1 where (@a:= f1) order by f1 limit 1;
select @a;
@a
1
drop table t1;
CREATE TABLE t1 (
`date` date ,
`time` time ,
`seq` int(10) unsigned NOT NULL auto_increment,
PRIMARY KEY  (`seq`),
KEY `seq` (`seq`),
KEY `time` (`time`),
KEY `date` (`date`)
);
DELETE FROM t1 ORDER BY date ASC, time ASC LIMIT 1;
drop table t1;
End of 4.1 tests
CREATE TABLE t1 (a int not null,b int not null);
CREATE TABLE t2 (a int not null, b int not null, primary key (a,b));
CREATE TABLE t3 (a int not null, b int not null, primary key (a,b));
insert into t1 values (1,1),(2,1),(1,3);
insert into t2 values (1,1),(2,2),(3,3);
insert into t3 values (1,1),(2,1),(1,3);
select * from t1,t2,t3 where t1.a=t2.a AND t2.b=t3.a and t1.b=t3.b order by t1.a,t1.b;
a	b	a	b	a	b
1	1	1	1	1	1
1	3	1	1	1	3
2	1	2	2	2	1
analyze table t1;
analyze table t2;
analyze table t3;
delete t2.*,t3.* from t1,t2,t3 where t1.a=t2.a AND t2.b=t3.a and t1.b=t3.b;
select * from t3;
a	b
drop table t1,t2,t3;
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (1);
DELETE FROM t1 ORDER BY x;
Error 1054: Unknown column 'x' in 'order clause'
DELETE FROM t1 ORDER BY t2.x;
Error 1054: Unknown column 't2.x' in 'order clause'
DELETE FROM t1 ORDER BY (SELECT x);
Error 1054: Unknown column 'x' in 'field list'
DROP TABLE t1;
CREATE TABLE t1 (
a INT
);
CREATE TABLE t2 (
a INT
);
CREATE DATABASE delete_db1;
CREATE TABLE delete_db1.t1 (
a INT
);
INSERT INTO delete_db1.t1 (a) SELECT * FROM t1;
CREATE DATABASE delete_db2;
CREATE TABLE delete_db2.t1 (
a INT
);
INSERT INTO delete_db2.t1 (a) SELECT * FROM t2;
DELETE FROM t1 alias USING t1, t2 alias WHERE t1.a = alias.a;
[parser:1064]You have an error in your SQL syntax; check the manual that corresponds to your TiDB version for the right syntax to use line 1 column 26 near "USING t1, t2 alias WHERE t1.a = alias.a;" 
DELETE FROM alias USING t1, t2 alias WHERE t1.a = alias.a;
DELETE FROM t1, alias USING t1, t2 alias WHERE t1.a = alias.a;
DELETE FROM t1, t2 USING t1, t2 alias WHERE t1.a = alias.a;
Error 1109: Unknown table 't2' in MULTI DELETE
DELETE FROM delete_db1.t1 alias USING delete_db1.t1, delete_db2.t1 alias WHERE delete_db1.t1.a = alias.a;
[parser:1064]You have an error in your SQL syntax; check the manual that corresponds to your TiDB version for the right syntax to use line 1 column 37 near "USING delete_db1.t1, delete_db2.t1 alias WHERE delete_db1.t1.a = alias.a;" 
DELETE FROM alias USING delete_db1.t1, delete_db2.t1 alias WHERE delete_db1.t1.a = alias.a;
DELETE FROM delete_db2.alias USING delete_db1.t1, delete_db2.t1 alias WHERE delete_db1.t1.a = alias.a;
Error 1109: Unknown table 'alias' in MULTI DELETE
DELETE FROM t1 USING t1 WHERE a = 1;
SELECT * FROM t1;
a
DELETE FROM t1 alias USING t1 alias WHERE a = 2;
[parser:1064]You have an error in your SQL syntax; check the manual that corresponds to your TiDB version for the right syntax to use line 1 column 26 near "USING t1 alias WHERE a = 2;" 
SELECT * FROM t1;
a
DROP TABLE t1, t2;
DROP DATABASE delete_db1;
DROP DATABASE delete_db2;
#
# Bug #49552 : sql_buffer_result cause crash + not found records
#   in multitable delete/subquery
#
CREATE TABLE t1(a INT);
INSERT INTO t1 VALUES (1),(2),(3);
SET SESSION SQL_BUFFER_RESULT=1;
DELETE t1 FROM (SELECT SUM(a) a FROM t1) x,t1;
SET SESSION SQL_BUFFER_RESULT=DEFAULT;
SELECT * FROM t1;
a
DROP TABLE t1;
End of 5.0 tests
CREATE DATABASE delete_db3;
USE delete_db3;
DROP DATABASE delete_db3;
SELECT * FROM t1;
Error 1046: No database selected
USE `delete`;
End of 5.1 tests
#
# Bug#51099 Assertion in mysql_multi_delete_prepare()
#
DROP TABLE IF EXISTS t1, t2;
DROP VIEW IF EXISTS v1, v2;
CREATE TABLE t1(a INT);
CREATE TABLE t2(b INT);
CREATE VIEW v1 AS SELECT a, b FROM t1, t2;
CREATE VIEW v2 AS SELECT a FROM v1;
DELETE FROM v2;
Error 1105: delete view v2 is not supported now.
DELETE v2 FROM v2;
Error 1105: delete view v2 is not supported now.
DROP VIEW v2, v1;
DROP TABLE t1, t2;
#
# Bug#18345346 Assertion failed: table_ref->view && table_ref->table == 0
#
CREATE TABLE b(a INTEGER);
CREATE VIEW y AS SELECT 1 FROM b, b AS e;
CREATE VIEW x AS SELECT 1 FROM y;
CREATE VIEW z AS SELECT 1 FROM x LIMIT 1;
DELETE z FROM (SELECT 1) AS x, z;
Error 1105: delete view z is not supported now.
DROP VIEW z, x, y;
DROP TABLE b;
#
# Bug#17550423 : DELETE IGNORE GIVES INCORRECT RESULT WITH FOREIGN KEY
#                   FOR PARENT TABLE
#
#
# Bug#20460208: !table || (!table->read_set || bitmap_is_set)
#
#
# Bug#20086791 ASSERT `! IS_SET()` IN DIAGNOSTICS_AREA::SET_OK_STATUS
#              ON DELETE (ER_SUBQUERY..)
#
SET sql_mode='';
CREATE TABLE t1 (
col_int_key int,
pk integer auto_increment,
col_datetime_key datetime,
/*Indices*/
key (col_int_key ),
primary key (pk),
key (col_datetime_key )
) ENGINE=memory;
CREATE TABLE t2 (
col_varchar_key varchar (1),
col_date_key date,
pk integer auto_increment,
/*Indices*/
key (col_varchar_key ),
key (col_date_key ),
primary key (pk)
) ENGINE=memory;
INSERT INTO t2 VALUES
('v',  '2002-05-01', NULL) ,
('d',  '2001-01-01', NULL)
;
CREATE TABLE t3 (
pk integer auto_increment,
col_int_key int,
col_varchar_key varchar (1),
/*Indices*/
primary key (pk),
key (col_int_key ),
key (col_varchar_key ))
ENGINE=memory;
INSERT INTO t3 VALUES
(NULL, 3, 'n') ,
(NULL, 1, 'r')
;
CREATE TABLE t4 (
pk integer auto_increment,
col_varchar_key varchar (1),
col_int_key int,
/*Indices*/
primary key (pk),
key (col_varchar_key ),
key (col_int_key )
) ENGINE=memory;
CREATE TABLE t5 (
col_datetime_key datetime,
pk integer auto_increment,
col_int_key int,
/*Indices*/
key (col_datetime_key ),
primary key (pk),
key (col_int_key ))
ENGINE=memory;
INSERT INTO t5 VALUES
('2007-10-01', NULL, 8) ,
('2002-10-01', NULL, 3)
;
DELETE OUTR1.* FROM t2 AS OUTR1
JOIN t3 AS OUTR2
ON ( OUTR1 . col_varchar_key = OUTR2 . col_varchar_key )
WHERE OUTR1 . col_varchar_key NOT IN
( SELECT  INNR1 . col_varchar_key AS y FROM t5 AS INNR2
RIGHT JOIN t4 AS INNR1 ON ( INNR2 . pk < INNR1 . col_int_key )
WHERE INNR1 . col_int_key <= INNR1 . col_int_key
AND OUTR2 . col_int_key >= 3  );
DELETE QUICK
FROM OUTR1.* USING t2 AS OUTR1
LEFT OUTER JOIN t1 AS OUTR2
ON ( OUTR1 . col_date_key = OUTR2 . col_datetime_key )
WHERE OUTR1 . pk NOT IN ( SELECT 2 UNION  SELECT 7 );
DELETE    OUTR1.*
FROM t2 AS OUTR1
LEFT JOIN t1 AS OUTR2
ON ( OUTR1 . pk = OUTR2 . col_int_key )
WHERE OUTR1 . pk <> (
SELECT DISTINCT INNR1 . col_int_key AS y
FROM t5 AS INNR1 WHERE OUTR1 . pk <= 5
ORDER BY INNR1 . col_datetime_key
);
Error 1242: Subquery returns more than 1 row
DROP TABLE t1, t2, t3, t4, t5;
SET sql_mode=default;
#
# Bug#29153485: ASSERTION IN JOIN_READ_CONST_TABLE()
#
CREATE TABLE d3 (
pk int(11) NOT NULL AUTO_INCREMENT,
col_int int(11) DEFAULT NULL,
col_varchar varchar(1) DEFAULT NULL,
PRIMARY KEY (pk)
) ;
INSERT INTO d3 VALUES (96,9,'t'),(97,0,'x');
CREATE TABLE e3 (
col_varchar varchar(1) DEFAULT NULL,
pk int(11) NOT NULL AUTO_INCREMENT,
PRIMARY KEY (pk)
) ;
INSERT INTO e3 VALUES ('v',986);
DELETE OUTR1.* FROM e3 AS OUTR1 INNER JOIN d3 AS OUTR2 ON
( OUTR1.col_varchar = OUTR2.col_varchar )
LEFT JOIN d3 AS OUTR3 ON ( OUTR1. pk = OUTR3.pk )
WHERE OUTR1.pk =
( SELECT DISTINCT INNR1.col_int FROM d3 AS INNR1 WHERE INNR1.pk <> 8) ;
Error 1242: Subquery returns more than 1 row
DROP TABLE d3,e3;
#
# Bug#27455809; DELETE FROM ...WHERE NOT EXISTS WITH TABLE ALIAS CREATES AN ERROR 1064 (42000
#
CREATE TABLE t1 (c1 INT);
INSERT INTO t1 VALUES (1), (2);
SELECT * FROM t1;
c1
1
2
DELETE FROM t1 AS a1 WHERE a1.c1 = 2;
SELECT * FROM t1;
c1
1
CREATE TABLE t2 (c2 INT);
INSERT INTO t2 VALUES (1), (2);
SELECT * FROM t2;
c2
1
2
DELETE FROM t2 a2 WHERE NOT EXISTS (SELECT * FROM t1 WHERE t1.c1 = a2.c2);
SELECT * FROM t2;
c2
1
DROP TABLE t1, t2;
# Bug#31640267: Assertion `trans_safe || updated_rows == 0 || thd->get_transaction()
CREATE TABLE t1(pk INTEGER PRIMARY KEY, a INTEGER);
INSERT INTO t1 VALUES(1, 10), (2, 20);
PREPARE s FROM 'DELETE t1 FROM t1, (SELECT 1 FROM DUAL) AS dt';
EXECUTE s;

SELECT ROW_COUNT();
ROW_COUNT()
0
INSERT INTO t1 VALUES(1, 10), (2, 20);
EXECUTE s;

SELECT ROW_COUNT();
ROW_COUNT()
0
DEALLOCATE PREPARE s;
DROP TABLE t1;
