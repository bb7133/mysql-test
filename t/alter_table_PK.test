#
# Test of alter table PK
#
# --disable_warnings
drop table if exists t1,t2;
# --enable_warnings

SET sql_mode = 'NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER';

#
# Drop and add an auto_increment column
#

create table t1 (i int unsigned not null auto_increment primary key);
insert into t1 values (null),(null),(null),(null);
--error ER_WRONG_SUB_KEY
alter table t1 drop i;
select * from t1;
drop table t1;

#
# Test ALTER TABLE ENABLE/DISABLE keys when things are locked
#

CREATE TABLE t1 (
  Host varchar(16) binary NOT NULL default '',
  User varchar(16) binary NOT NULL default '',
  PRIMARY KEY  (Host,User)
) ENGINE=MyISAM;

ALTER TABLE t1 DISABLE KEYS;
LOCK TABLES t1 WRITE;
INSERT INTO t1 VALUES ('localhost','root'),('localhost',''),('games','monty');
SHOW INDEX FROM t1;
ALTER TABLE t1 ENABLE KEYS;
UNLOCK TABLES;
DROP TABLE t1;

#
# Test with two keys
#

CREATE TABLE t1 (
  Host varchar(16) binary NOT NULL default '',
  User varchar(16) binary NOT NULL default '',
  PRIMARY KEY  (Host,User),
  KEY  (Host)
) ENGINE=MyISAM;

ALTER TABLE t1 DISABLE KEYS;
SHOW INDEX FROM t1;
LOCK TABLES t1 WRITE;
INSERT INTO t1 VALUES ('localhost','root'),('localhost','');
SHOW INDEX FROM t1;
ALTER TABLE t1 ENABLE KEYS;
SHOW INDEX FROM t1;
UNLOCK TABLES;

#
# BUG#6236 - ALTER TABLE MODIFY should set implicit NOT NULL on PK columns
#
drop table if exists t1, t2;
create table t1 ( a varchar(10) not null primary key ) ;
create table t2 ( a varchar(10) not null primary key ) ;
flush tables;
alter table t1 modify a varchar(10);
show create table t2;
flush tables;
alter table t1 modify a varchar(10) not null;
show create table t2;
drop table if exists t1, t2;



#
# Bug 2361 (Don't drop UNIQUE with DROP PRIMARY KEY)
#

CREATE TABLE t1 (a int PRIMARY KEY, b INT UNIQUE);
--error ER_CANT_DROP_FIELD_OR_KEY
ALTER TABLE t1 DROP PRIMARY KEY;
SHOW CREATE TABLE t1;
DROP TABLE t1;

#
# Some additional tests for new, faster alter table.  Note that most of the
# whole alter table code is being tested all around the test suite already.
#

create table t1 (v varchar(32));
insert into t1 values ('def'),('abc'),('hij'),('3r4f');
select * from t1;
# Fast alter, no copy performed
alter table t1 change v v2 varchar(32);
select * from t1;
# Fast alter, no copy performed
alter table t1 change v2 v varchar(64);
select * from t1;
update t1 set v = 'lmn' where v = 'hij';
select * from t1;
# Regular alter table
--error ER_WRONG_SUB_KEY
alter table t1 add i int auto_increment not null primary key first;
select * from t1;
--error ER_WRONG_SUB_KEY
update t1 set i=5 where i=3;
select * from t1;
--error ER_WRONG_SUB_KEY
alter table t1 change i i bigint;
select * from t1;
drop table t1;

#
# Bug #23113: Different behavior on altering ENUM fields between 5.0 and 5.1
#
CREATE TABLE t1(a INT AUTO_INCREMENT PRIMARY KEY,
  b ENUM('a', 'b', 'c') NOT NULL);
INSERT INTO t1 (b) VALUES ('a'), ('c'), ('b'), ('b'), ('a');
--error ER_WRONG_SUB_KEY
ALTER TABLE t1 MODIFY b ENUM('a', 'z', 'b', 'c') NOT NULL;
SELECT * FROM t1;
DROP TABLE t1;

--echo End of 5.1 tests

#
# Bug #31031 ALTER TABLE regression in 5.0
#
#  The ALTER TABLE operation failed with
#  ERROR 1089 (HY000): Incorrect sub part key; ...
#
CREATE TABLE t1(c CHAR(10),
  i INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY);
INSERT INTO t1 VALUES('a',2),('b',4),('c',6);
--error ER_WRONG_SUB_KEY
ALTER TABLE t1 DROP i;
DROP TABLE t1;

#
# Bug#50542 5.5.x doesn't check length of key prefixes:
#           corruption and crash results
#
# This case is related to Bug#31031 (above)
# A statement where the index key is larger/wider than
# the column type, should cause an error
#
--error ER_WRONG_SUB_KEY
CREATE TABLE t1 (a CHAR(1), PRIMARY KEY (a(255)));

# Test other variants of creating indices
CREATE TABLE t1 (a CHAR(1));
#  ALTER TABLE
--error ER_WRONG_SUB_KEY
ALTER TABLE t1 ADD KEY (a(20));
#  CREATE INDEX
--error ER_WRONG_SUB_KEY
CREATE UNIQUE INDEX i1 ON t1 (a(20));
--error ER_WRONG_SUB_KEY
CREATE INDEX i2 ON t1 (a(20));
# cleanup
DROP TABLE t1;

--echo #
--echo # Tests for WL#6555 "Online rename index".
--echo #

--echo #
--echo # 1) Tests for syntax and semantics of ALTER TABLE RENAME
--echo #    KEY/INDEX result.
--echo #
--echo # 1.a) Both RENAME KEY and RENAME INDEX variants should be
--echo #      allowed and produce expected results.
create table t1 (pk int primary key, i int, j int, key a(i));
alter table t1 rename key a to b;
show create table t1;
alter table t1 rename index b to c;
show create table t1;

--echo # 1.e) We disallow renaming from/to PRIMARY as it might
--echo #      lead to some other key becoming "primary" internally,
--echo #      which will be interpreted as dropping/addition of
--echo #      primary key.
--error ER_PARSE_ERROR
alter table t1 rename key primary to d;
show create table t1;
--echo # Even using 'funny' syntax.
--error ER_PARSE_ERROR
alter table t1 rename key `primary` to d;
show create table t1;
--error ER_PARSE_ERROR
alter table t1 rename key c to primary;
show create table t1;
show create table t1;
drop table t1;